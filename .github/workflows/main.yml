name: Update PY

on:
  schedule:
    - cron: '0 */12 * * *'  # 每12小时运行一次
      timezone: Asia/Shanghai
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: pip install pyaes requests

    - name: Run update script
      run: python py.py

    - name: Commit and push changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "actions@github.com"
        git add nodes.txt update_history.md
        git commit -m "Auto update: $(date +'%Y-%m-%d %H:%M:%S')"
        git push

    - name: WeChat Work Notification
      env:
        WEBHOOK_URL: ${{ secrets.WECHAT_WEBHOOK }}
      run: |
        # 获取北京时间并格式化为中文时间戳
        UPDATE_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')

        # 从日志文件获取最新新增节点数（确保读取最新的日志）
        NEW_NODES=$(tail -n 4 update_history.md | grep -oP '新增节点数: \K\d+' | tail -1)
        NEW_NODES=${NEW_NODES:-0}  # 如果 NEW_NODES 为空，设置为 0

        # 在同一个步骤中读取节点总数和最新节点列表
        TOTAL_NODES=$(wc -l < nodes.txt)
        LATEST_NODES=$(tail -n 5 nodes.txt | sed 's/"/\\"/g')

        # 构建JSON消息体
        MESSAGE_JSON=$(cat <<EOF
        {
          "msgtype": "markdown",
          "markdown": {
            "content": "**🔄 节点更新通知**\n
            > **更新时间**: \`${UPDATE_TIME}\`\n
            > **新增节点数**: \`${NEW_NODES}\`\n
            > **节点总数**: \`${TOTAL_NODES}\`\n\n
            **最新节点列表**:\n
            \`\`\`\n
            ${LATEST_NODES}
            \`\`\`"
          }
        }
        EOF
        )

        # 发送请求
        curl -X POST "$WEBHOOK_URL" \
          -H "Content-Type: application/json" \
          -d "$MESSAGE_JSON"
